<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.acne.dao.ArticleMapper">
	<resultMap id="BaseResultMap" type="com.acne.model.Article">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="articleId" property="articleid" jdbcType="BIGINT" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="publishDate" property="publishdate" jdbcType="TIMESTAMP" />
		<result column="viewTimes" property="viewtimes" jdbcType="INTEGER" />
		<result column="upTimes" property="uptimes" jdbcType="INTEGER" />
		<result column="downTimes" property="downtimes" jdbcType="INTEGER" />
		<result column="available" property="available" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.acne.model.Article"
		extends="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<result column="content" property="content" jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		t_article.articleId, title, publishDate, viewTimes, upTimes,
		downTimes,
		t_article.available
	</sql>
	<sql id="Blob_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		content
	</sql>

	<select id="queryPostedArticle" parameterType="java.lang.Long"
		resultMap="ResultMapWithBLOBs">
		select t_article.* from t_article inner join t_anti_article
		on t_article.articleId = t_anti_article.articleId where
		t_anti_article.antiUserId = #{userId, jdbcType=BIGINT} order by
		publishDate desc limit 5;
	</select>

	<select id="queryMoreArticleByArticleId" parameterType="java.lang.Long"
		resultMap="ResultMapWithBLOBs">
		select t_article.articleId, t_article.title
		from t_article
		inner join t_anti_article on t_article.articleId =
		t_anti_article.articleId
		where t_anti_article.antiUserId in (select
		antiUserId from t_anti_article
		where t_anti_article.articleId =
		#{articleId, jdbcType=BIGINT})
		order by t_article.viewTimes desc
		limit
		10
	</select>

	<select id="selectAntiUserArticleByPrimaryKey" resultType="java.util.Map"
		parameterType="java.lang.Long">
		select * from t_article left join
		t_anti_article on
		t_article.articleId = t_anti_article.articleId left
		join t_anti_user on
		t_anti_user.userId = t_anti_article.antiUserId
		where
		t_article.articleId = #{articleId, jdbcType=BIGINT};
	</select>

	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from t_article
		where articleId = #{articleid,jdbcType=BIGINT}
	</select>
	<select id="selectAll" resultMap="ResultMapWithBLOBs">
		select * from t_article order
		by t_article.viewTimes desc
	</select>

	<select id="selectRecommands" parameterType="java.lang.Integer"
		resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from t_article
		order by viewTimes desc limit
		#{size}
	</select>

	<select id="queryViewedArticles" resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from t_acne_user left join t_acne_article
		on t_acne_user.userId =
		t_acne_article.acneUserId left join t_article
		on
		t_acne_article.articleId = t_article.articleId
		where t_acne_user.userId
		= #{userId, jdbcType=BIGINT} order by t_acne_article.viewTime desc
		limit #{size}
	</select>

	<!-- select t_article.* from t_acne_user left join t_acne_article on t_acne_user.userId 
		= t_acne_article.acneUserId left join t_article on t_acne_article.articleId 
		= t_article.articleId where t_acne_user.userId = 1 order by t_acne_article.viewTime 
		desc; -->

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from t_article
		where articleId = #{articleid,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.acne.model.Article">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into t_article (articleId, title, publishDate,
		viewTimes,
		upTimes, downTimes,
		available, content)
		values
		(#{articleid,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR},
		#{publishdate,jdbcType=TIMESTAMP},
		#{viewtimes,jdbcType=INTEGER},
		#{uptimes,jdbcType=INTEGER}, #{downtimes,jdbcType=INTEGER},
		#{available,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.acne.model.Article">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into t_article
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="articleid != null">
				articleId,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="publishdate != null">
				publishDate,
			</if>
			<if test="viewtimes != null">
				viewTimes,
			</if>
			<if test="uptimes != null">
				upTimes,
			</if>
			<if test="downtimes != null">
				downTimes,
			</if>
			<if test="available != null">
				available,
			</if>
			<if test="content != null">
				content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="articleid != null">
				#{articleid,jdbcType=BIGINT},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="publishdate != null">
				#{publishdate,jdbcType=TIMESTAMP},
			</if>
			<if test="viewtimes != null">
				#{viewtimes,jdbcType=INTEGER},
			</if>
			<if test="uptimes != null">
				#{uptimes,jdbcType=INTEGER},
			</if>
			<if test="downtimes != null">
				#{downtimes,jdbcType=INTEGER},
			</if>
			<if test="available != null">
				#{available,jdbcType=INTEGER},
			</if>
			<if test="content != null">
				#{content,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.acne.model.Article">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update t_article
		<set>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="publishdate != null">
				publishDate = #{publishdate,jdbcType=TIMESTAMP},
			</if>
			<if test="viewtimes != null">
				viewTimes = viewTimes + #{viewtimes,jdbcType=INTEGER},
			</if>
			<if test="uptimes != null">
				upTimes = upTimes + #{uptimes,jdbcType=INTEGER},
			</if>
			<if test="downtimes != null">
				downTimes = downTimes + #{downtimes,jdbcType=INTEGER},
			</if>
			<if test="available != null">
				available = #{available,jdbcType=INTEGER},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where articleId = #{articleid,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.acne.model.Article">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update t_article
		set title = #{title,jdbcType=VARCHAR},
		publishDate =
		#{publishdate,jdbcType=TIMESTAMP},
		viewTimes =
		#{viewtimes,jdbcType=INTEGER},
		upTimes = #{uptimes,jdbcType=INTEGER},
		downTimes = #{downtimes,jdbcType=INTEGER},
		available =
		#{available,jdbcType=INTEGER},
		content =
		#{content,jdbcType=LONGVARCHAR}
		where articleId =
		#{articleid,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.acne.model.Article">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update t_article
		set title = #{title,jdbcType=VARCHAR},
		publishDate =
		#{publishdate,jdbcType=TIMESTAMP},
		viewTimes =
		#{viewtimes,jdbcType=INTEGER},
		upTimes = #{uptimes,jdbcType=INTEGER},
		downTimes = #{downtimes,jdbcType=INTEGER},
		available =
		#{available,jdbcType=INTEGER}
		where articleId =
		#{articleid,jdbcType=BIGINT}
	</update>
</mapper>